Цей каталог містить конфігураційні файли для ігнорування помилок, знайдених у процесі збирання та тестування, які відомі розробникам і поки що можуть бути безпечно проігноровані.

Для використання:

 $ cd <build directory>
 $ make SOMETHING >& result
 $ scripts/filter-known-issues.py result

Це включено у дерево коду, тому якщо хтось має надіслати щось
що спричиняє якусь помилку, яка є хибним спрацьовуванням, це може
містити файл «ігнорувати мене», належним чином задокументований.

Кожен файл може містити один або декілька багаторядкових регулярних виразів Python
(https://docs.python.org/2/library/re.html#regular-expression-syntax)
які відповідають повідомленню про помилку. Кілька регулярних виразів
розділені блоками коментарів (які починаються з #). Зверніть увагу, що порожній рядок все одно вважається частиною багаторядкового регулярного виразу.

Наприклад

---beginning---
#
# This testcase always fails, pending fix ZEP-1234
#
.*/tests/kernel/grumpy .* FAIL
#
# Documentation issue, masks:
#
# /home/e/inaky/z/kernel.git/doc/api/io_interfaces.rst:28: WARNING: Invalid definition: Expected identifier in nested name. [error at 19]
#  struct dev_config::@65  dev_config::bits
#  -------------------^
#
^(?P<filename>.+/doc/api/io_interfaces.rst):(?P<lineno>[0-9]+): WARNING: Invalid definition: Expected identifier in nested name. \[error at [0-9]+]
^\s+struct dev_config::@[0-9]+  dev_config::bits.*
^\s+-+\^
---end---

Зауважте, що ви хочете:

- використовувати відносні шляхи замість
  /home/me/mydir/zephyr/something/somewhere.c ви захочете
  ^.*/something/somewhere.c (оскільки вони будуть залежати від того, де він будується)

- замініти номери рядків на [0-9]+, оскільки вони зміняться

- (?P<filename>[-._/\w]+/something/somewhere.c) зберігає збіг за
  шляху до файлу у «variable» з назвою «filename», яку пізніше ви зможете
  за допомогою (?P=filename), якщо ви хочете знайти збіг у декількох рядках
  одного і того ж повідомлення про помилку.

Можуть бути дійсно закручені і цікаві з точки зору regexps вони є
потужні, тому почніть з малого :)
